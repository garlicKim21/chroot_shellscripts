# kubernetes-troubleshooting-challenges.yaml

apiVersion: v1
kind: Namespace
metadata:
  name: q1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: q1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
    spec:
      containers:
      - name: nginx-container
        image: nginxxx:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Namespace
metadata:
  name: q2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: q2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      containers:
      - name: api-container
        image: nginx:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: q2
spec:
  selector:
    app: backend-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: v1
kind: Namespace
metadata:
  name: q3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: q3
data:
  config.txt: "Application configuration data."
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: q3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-app
  template:
    metadata:
      labels:
        app: simple-app
    spec:
      containers:
      - name: app-container
        image: nginx:latest
        volumeMounts:
        - name: config-volume
          mountPath: /etc/app-config
      volumes:
      - name: config-volume
        configMap:
          name: invalid-config-name
---
apiVersion: v1
kind: Namespace
metadata:
  name: q4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  namespace: q4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: background-worker
  template:
    metadata:
      labels:
        app: background-worker
    spec:
      containers:
      - name: worker-container
        image: progrium/stress:latest
        command: ["stress-ng"]
        args: ["--cpu", "1", "--timeout", "600s", "--vm", "1", "--vm-bytes", "250M"]
        resources:
          limits:
            memory: "100Mi"
            cpu: "100m"
          requests:
            memory: "50Mi"
            cpu: "50m"
